##### The filesystem location where files managed by irida are stored. The platform
##### will *NOT* automatically make this directory, so it must exist before you
##### start any instance of the platform.
sequence.file.base.directory=/opt/irida/data/sequence
reference.file.base.directory=/opt/irida/data/reference
output.file.base.directory=/opt/irida/data/output

##### The database-specific settings. Several examples of how to specify a 
##### Hibernate driver are listed below (but commented out).

## MySQL (or MariaDB) 
jdbc.driver=com.mysql.jdbc.Driver
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

## Database location (you may need to use a different string for different
## database vendors).
jdbc.url=jdbc:mysql://localhost:3306/irida_test

## Connection settings:
jdbc.username=test
jdbc.password=test

## Configuring Liquibase to execute a schema update. Should only make changes to
## the database when executing the first time, or when upgrading.
liquibase.update.database.schema=true

## Configure Hibernate to execute a schema construction. WARNING: do not use this
## at the same time as the Liquibase schema update. Liquibase will *not* execute
## if this value is set, warnings will be produced in the log. These settings should
## only be used in a development environment (**not** production).
hibernate.hbm2ddl.auto=
hibernate.hbm2ddl.import_files=

## Configure Hibernate to show SQL in the log file. You *probably* don't want
## to enable this, but could be useful for debugging.
hibernate.show_sql=false

## Connection Pool settings:
jdbc.pool.initialSize=10
jdbc.pool.maxActive=20
jdbc.pool.testOnBorrow=true
jdbc.pool.testOnReturn=true
jdbc.pool.testWhileIdle=true

## Configure the JDBC library to use this query to verify that a managed
## connection is still valid. This may need to change, depending on your database vendor.
jdbc.pool.validationQuery=select 1

jdbc.pool.maxWait=10000
jdbc.pool.removeAbandoned=true
jdbc.pool.logAbandoned=true
jdbc.pool.removeAbandonedTimeout=60
jdbc.pool.maxIdle=10

########################################################
# Uploader configuration for uploading files to Galaxy #
# These options are used for sending files to an       #
# external instance of Galaxy (*not* the internal IRIDA#
# instance of Galaxy!)				       #
########################################################

# The URL Galaxy is being run
#galaxy.uploader.url=http://localhost/

# An email address of an administrator account on Galaxy (this *MUST* be an administrator
# account -- the Galaxy exporter code creates data libraries in Galaxy, which can only
# be created by administrator accounts).
#galaxy.uploader.admin.email=admin@localhost

# An API key for the above admin account
#galaxy.uploader.admin.apiKey=xxxx

# How to store data on Galaxy.  One of 'remote' or 'local'.
## remote:  Uploads a copy of a file to Galaxy.
## local:  Uploads only a filesystem location (link) of a file to Galaxy.  Assumes
##  files are shared between the NGS Archive and Galaxy (e.g. over NFS).
#galaxy.uploader.dataStorage=local


###############################################################################
# Execution Manager configuration Galaxy. This is how IRIDA should connect to #
# the internally managed instance of Galaxy for executing workflows.          #
###############################################################################

# The URL for the Galaxy execution manager
#galaxy.execution.url=http://localhost/

# The API key of an account to run workflows in Galaxy.
# This does not have to be an administrator account.
#galaxy.execution.apiKey=xxxx

# The email address of an account to run workflows in Galaxy
#galaxy.execution.email=user@localhost

# The data storage method for uploading data into a Galaxy execution manager.
#galaxy.execution.dataStorage=local

##################################
# Workflow configuration options #
##################################

# The timeout (in seconds) for uploading files to Galaxy for execution
# Increase this value if uploading files to Galaxy is timing out.
#galaxy.library.upload.timeout=300

# The polling time (in seconds) for checking if files have been uploaded to Galaxy
# This value should not be greater than $galaxy.library.upload.timeout
#galaxy.library.upload.polling.time=5
