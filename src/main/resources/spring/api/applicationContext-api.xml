<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath:/spring/security/applicationContext-security.xml"/>

    <!--
        - POJOs labeled with the @Controller and @Service annotations are auto-detected.
    -->
    <context:component-scan
            base-package="ca.corefacility.bioinformatics.irida.web.controller.api"/>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager"/>

    <!--
        - Message source for this context, loaded from localized "messages_xx" files.
        - Files are stored inside src/main/resources
    -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages/messages"/>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="contentNegotiationManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="1"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
                    <property name="prettyPrint" value="true"/>
                </bean>
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="packagesToScan">
                                <list>
                                    <value>ca.corefacility.bioinformatics.irida.web.assembler.resource</value>
                                </list>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>
                <bean class="ca.corefacility.bioinformatics.irida.web.spring.view.FastaView"/>
                <bean class="ca.corefacility.bioinformatics.irida.web.spring.view.FastqView"/>
                <bean class="ca.corefacility.bioinformatics.irida.web.spring.view.GenbankView"/>
            </list>
        </property>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

        <!-- one of the properties available; the maximum file size in bytes -->
        <property name="maxUploadSize" value="10737418240"/>
    </bean>

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- DO NOT ignore the 'Accept' header when determining which type of response to send -->
        <property name="ignoreAcceptHeader" value="false"/>
        <!-- If we can't figure out what the client is asking for, send them HTML -->
        <property name="defaultContentType" value="application/json"/>
        <!-- Allow the content negotiator to infer response types using path extension -->
        <property name="favorPathExtension" value="true"/>
        <!-- specify extension to media type mappings -->
        <property name="mediaTypes">
            <map>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
                <entry key="fasta" value="application/fasta"/>
                <entry key="fastq" value="application/fastq"/>
                <entry key="gbk" value="application/genbank"/>
            </map>
        </property>
    </bean>
</beans>