<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<sec:http pattern="/oauth/token" create-session="stateless"
		authentication-manager-ref="clientAuthenticationManager">
		<sec:http-basic entry-point-ref="clientAuthenticationEntryPoint" />

		<!-- Anonymous filter added for allowing lookup of client details -->
		<sec:custom-filter ref="anonymousAuthFilter" before="BASIC_AUTH_FILTER" />
		<sec:custom-filter ref="clientCredentialsTokenEndpointFilter"
			after="BASIC_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<!-- Custom anonymous authentication filter to set authenticated=false on 
		AnonymousAuthenticationToken -->
	<bean id="anonymousAuthFilter"
		class="ca.corefacility.bioinformatics.irida.web.filter.UnauthenticatedAnonymousAuthenticationFilter">
		<constructor-arg value="anonymousTokenAuthProvider" />
	</bean>
	
	<sec:http pattern="/oauth/authorize" authentication-manager-ref="authenticationManager" access-denied-page="/login"
		disable-url-rewriting="true">
		<sec:intercept-url pattern="/oauth/authorize" access="IS_AUTHENTICATED_FULLY"/>
		<sec:form-login authentication-failure-url="/login"
			default-target-url="/success" login-page="/login"
			login-processing-url="/login.do" />
			
		<sec:custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
	</sec:http>
	
	<sec:http pattern="/login*" authentication-manager-ref="authenticationManager" access-denied-page="/login"
		disable-url-rewriting="true">
		<sec:anonymous/>
		<sec:intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		
		<sec:form-login authentication-failure-url="/login"
			default-target-url="/success" login-page="/login"
			login-processing-url="/login.do" />
		<sec:logout logout-success-url="/login" logout-url="/logout.do" />
		<sec:custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
	</sec:http>
	
	<oauth:client id="oauth2ClientFilter"  />
	
	<sec:http pattern="/favicon.ico" security="none" />
	
	<sec:http pattern="/**" create-session="stateless"
		entry-point-ref="oauthAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager"
		authentication-manager-ref="clientAuthenticationManager">
		<sec:anonymous enabled="false" />
		<!-- Read scope for GET requests -->
		
		<sec:intercept-url pattern="/success" access="IS_AUTHENTICATED_FULLY" />
		<sec:intercept-url pattern="/test" access="IS_AUTHENTICATED_FULLY" />      
		<sec:intercept-url pattern="/**" method="GET" access="SCOPE_READ" />
		<!-- Read and write scope for all other requests -->
		<sec:intercept-url pattern="/**" access="SCOPE_READ,SCOPE_WRITE" />
		<sec:custom-filter ref="nmlIridaResourceServer" before="PRE_AUTH_FILTER" />
		<sec:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sec:http>

	<oauth:web-expression-handler id="oauthWebExpressionHandler" />
		
	<oauth:resource-server id="nmlIridaResourceServer"
		resource-id="NmlIrida" token-services-ref="tokenServices" />
		
	<!--  Use in web project-->
	<oauth:authorization-server
			client-details-service-ref="clientDetails" 
			token-services-ref="tokenServices">
		<oauth:authorization-code />
		<oauth:password authentication-manager-ref="authenticationManager"/>
	</oauth:authorization-server>
	 
	<sec:authentication-manager id="clientAuthenticationManager">
		<sec:authentication-provider user-service-ref="clientDetailsUserDetailsService" />
	</sec:authentication-manager>
		
</beans>